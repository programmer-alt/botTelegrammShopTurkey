// –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –º–æ–¥—É–ª–∏
import TelegramBot from "node-telegram-bot-api";
import { config } from "../config/config";
import { createMainKeyboard } from "../keyboards/keyboard";
import { musicKeyboard } from "../keyboards/musicKeyboard";

// –û–ø—Ä–µ–¥–µ–ª—è–µ–º –º–∞—Å—Å–∏–≤ —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ —Ç—Ä–µ–∫–∞—Ö
const tracks = [
  {
    title: "Bobina - The Unforgiven (Airplay Mix)",
    fileId: "src/assets/music/Bobina - The Unforgiven (Airplay Mix).mp3",
  },
  {
    title: "Killteq & D.Hash - On Repeat",
    fileId: "src/assets/music/Killteq & D.Hash - On Repeat.mp3",
  },
  {
    title: "Danaps, Hory - Bailando",
    fileId: "src/assets/music/Danaps, Hory - Bailando.mp3",
  },
  {
    title: "ONEIL, KANVISE, FAVIA - Around My Heart",
    fileId: "src/assets/music/ONEIL, KANVISE, FAVIA - Around My Heart.mp3",
  },
];

const handletrackSelection = (trackTitle: string) => {
  const performer = trackTitle === "Bobina - The Unforgiven (Airplay Mix)" ? "üï∫ –¢–∞–Ω—Ü–µ–≤–∞–ª—å–Ω–∞—è –º—É–∑—ã–∫–∞" :
    trackTitle === "Killteq & D.Hash - On Repeat" ? "üéß –ö–ª—É–±–Ω–∞—è –º—É–∑—ã–∫–∞" :
    trackTitle === "Danaps, Hory - Bailando" ? "üéß –†–µ—Ç—Ä–æ —Ä–µ–º–∏–∫—Å" :
    trackTitle === "ONEIL, KANVISE, FAVIA - Around My Heart" ? "üéß 80s —Ä–µ–º–∏–∫—Å" :
    "Unknown"
  return performer
}// –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –º—É–∑—ã–∫–∏
let isMusicHandlerActive = false;

export const handleMusic = (bot: TelegramBot, chatId: number) => {
    if (isMusicHandlerActive) return; // Prevent multiple registrations
    isMusicHandlerActive = true;

  
  // –°–æ–∑–¥–∞–µ–º —Å–ø–∏—Å–æ–∫ —Ç—Ä–µ–∫–æ–≤ –≤ —Ñ–æ—Ä–º–∞—Ç–µ "–Ω–æ–º–µ—Ä. –Ω–∞–∑–≤–∞–Ω–∏–µ"
  const trackList = tracks
    .map((track, index) => `${index + 1}. ${track.title}`)
    .join("\n");
  
  // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —Å–ø–∏—Å–∫–æ–º —Ç—Ä–µ–∫–æ–≤ –∏ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π
  bot.sendMessage(chatId, config.messages.music + "\n" + trackList, {
    reply_markup: {
      keyboard: musicKeyboard(tracks),
      one_time_keyboard: true,
      resize_keyboard: true,
    },
  });

    // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –≤—Ö–æ–¥—è—â–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è
    const handleTrackSelection = async (msg: TelegramBot.Message) => {
    bot.on("message", handleTrackSelection);

    // –ü—ã—Ç–∞–µ–º—Å—è –Ω–∞–π—Ç–∏ –Ω–æ–º–µ—Ä –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ —Ç—Ä–µ–∫–∞
    const match = msg.text?.match(/^(\d+)\./);
    const selectedTrackIndex = match ? parseInt(match[1]) - 1 : -1;
    
    // –ï—Å–ª–∏ –≤—ã–±—Ä–∞–Ω –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —Ç—Ä–µ–∫
    if (selectedTrackIndex >= 0 && selectedTrackIndex < tracks.length) {
        const selectedTrack = tracks[selectedTrackIndex];
        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ–∂–∏–¥–∞–Ω–∏–∏ –∑–∞–≥—Ä—É–∑–∫–∏
        bot.sendMessage(chatId, "‚¨ÜÔ∏è  –ó–∞–≥—Ä—É–∑–∫–∞ –º—É–∑—ã–∫–∏, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ...‚û°Ô∏è");
        
        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∞—É–¥–∏–æ-—Ñ–∞–π–ª
        bot.sendAudio(chatId, selectedTrack.fileId, {
            caption: selectedTrack.title,
            title: selectedTrack.title,
            performer: handletrackSelection(selectedTrack.title) ?? '',
        }).then(() => {
            // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –æ –Ω–∞—á–∞–ª–µ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è
            bot.sendMessage(chatId, `üéµ–¢–µ–ø–µ—Ä—å —Å–ª—É—à–∞–π—Ç–µ —Ç—Ä–µ–∫!üëç`);
        });
    } else {
        // –ï—Å–ª–∏ fileId –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—à–∏–±–∫—É
        bot.sendMessage(chatId, "–û—à–∏–±–∫–∞: —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω.");
    }
};
